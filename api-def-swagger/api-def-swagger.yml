swagger: '2.0'
info:
  version: 1.0.0
  title: Codenames Game
  description: This is the definition for an extremely simple API for the a client/server based game of codenames. The game state lives in the backend. A frontend can retrieve the ID of a new game, can request the state of a game by ID and can update the state of a game by ID.
paths:
  /game/new:
    get:
      summary: Create a new game.
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/gameId'
      description: Triggers the creation of a new game in the backend and retrieves a unique ID of this new game.
  /game/{gameId}:
    get:
      produces:
      - application/json
      parameters:
      - name: gameId
        in: path
        description: ID of game to return
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/game'
        400:
          description: Invalid ID supplied
      summary: Retrieve complete state of an existing game.
    put:
      summary: Updates the state of an existing game.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: gameId
        in: path
        description: ID of game that needs to be updated
        required: true
        type: integer
        format: int64
      - in: body
        name: game
        description: The updated game state.
        schema:
          $ref: '#/definitions/game'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/game'
        405:
          description: Invalid input
      description: Update the state of an existing game by providing the complete (new) state of the game.
definitions:
  game:
    type: object
    required:
    - word_matrix
    - color_matrix
    - hidden_matrix
    properties:
      word_matrix:
        type: array
        items:
          $ref: "#/definitions/row"
        example: [["word", "word", "word", "word", "word"], ["word", "word", "word", "word", "word"], ["word", "word", "word", "word", "word"], ["word", "word", "word", "word", "word"], ["word", "word", "word", "word", "word"]]
      color_matrix:
        type: array
        items:
          $ref: "#/definitions/row"
        example: [["2", "2", "3", "2", "1"], ["2", "1", "1", "2", "1"], ["2", "1", "1", "0", "1"], ["0", "0", "2", "0", "1"], ["0", "0", "2", "0", "1"]]
      hidden_matrix:
        type: array
        items:
          $ref: "#/definitions/row"
        example: [["0", "0", "0", "0", "0"], ["0", "0", "1", "0", "0"], ["0", "1", "0", "0", "0"], ["0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0"]]
    description: |-
      This data structure describes the complete state of a game of codenames. A complete game of codenames consists of three arrays. Each array containts of five rows. Each row consists of five strings.

      This results in three matrices consisting of 25 strings each.

      The first matrix consists of the 25 __words__ of the game.
      The second matrix consists of the 25 __colors__ of the words.
      The third matrix consists of the 25 __visibilities__ of the game.          
  row:
    type: array
    items:
      type: string
    example: ["0", "0", "0", "1", "0"]
    description: This is one row of five strings.
  gameId:
    type: integer
    format: int64
host: virtserver.swaggerhub.com
schemes:
 - https
 - http
# Added by API Auto Mocking Plugin
basePath: /codenames-dev/codenames61-api/1.0.0
